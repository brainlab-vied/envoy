admin:
  address:
    socket_address: {address: ::1, port_value: 9901}

static_resources:
  listeners:
  - name: listener1
    address:
      # TODO: Replace port_value dynamically with used port!
      socket_address: {address: ::1, port_value: 50051}
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: grpc_json
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: {prefix: "/testing.TestService/ping"}
                route: {cluster: grpc, timeout: 50s}
          http_filters:
          - name: envoy.filters.http.grpc_http1_reverse_bridge_transcoder
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_http1_reverse_bridge_transcoder.v3.FilterConfig
              # TODO: Adjust location dynamically
              proto_descriptor: "/home/simon/git-repos/envoy/test_brainlab/data/service.pb"
              service: "testing.TestService"
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
  - name: grpc
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: grpc
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # TODO: Target port mapping?
                address: ::1
                port_value: 5000
